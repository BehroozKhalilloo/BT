# -*- coding: utf-8 -*-
"""backtest_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jZksgNdy8LN6vFwdd0Gi1V4ys7JNujHF
"""

# backtesting_dashboard.py
import yfinance as yf
import pandas as pd
import plotly.graph_objects as go
import streamlit as st

st.title("Moving Average Crossover Backtest")

ticker = st.text_input("Enter ticker", "AAPL")
start = st.date_input("Start Date", pd.to_datetime("2020-01-01"))
end = st.date_input("End Date", pd.to_datetime("2024-01-01"))
short_window = st.slider("Short MA", 5, 50, 20)
long_window = st.slider("Long MA", 20, 200, 50)

df = yf.download(ticker, start=start, end=end)
df["ShortMA"] = df["Close"].rolling(short_window).mean()
df["LongMA"] = df["Close"].rolling(long_window).mean()
df["Signal"] = 0
df["Signal"][short_window:] = (df["ShortMA"][short_window:] > df["LongMA"][short_window:]).astype(int)
df["Position"] = df["Signal"].diff()

fig = go.Figure()
fig.add_trace(go.Scatter(x=df.index, y=df["Close"], name="Price"))
fig.add_trace(go.Scatter(x=df.index, y=df["ShortMA"], name="Short MA"))
fig.add_trace(go.Scatter(x=df.index, y=df["LongMA"], name="Long MA"))
fig.add_trace(go.Scatter(x=df[df["Position"] == 1].index,
                         y=df["Close"][df["Position"] == 1],
                         name="Buy", mode="markers", marker_symbol="triangle-up", marker_color="green"))
fig.add_trace(go.Scatter(x=df[df["Position"] == -1].index,
                         y=df["Close"][df["Position"] == -1],
                         name="Sell", mode="markers", marker_symbol="triangle-down", marker_color="red"))
st.plotly_chart(fig)